{"version":3,"sources":["js/index.js"],"names":[],"mappings":";;;AAAA,aAAA,QAAA","file":"js.0569185d.js","sourceRoot":"../src","sourcesContent":["import '../css/styles.css';\n// SimpleLightbox\n// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// import axios from \"axios\";\n\n\n\n// ==========================================================================================================\n\n// В ответе будет массив изображений удовлетворивших критериям параметров запроса. Каждое изображение описывается объектом, из которого тебе интересны только следующие свойства:\n// webformatURL - ссылка на маленькое изображение для списка карточек.\n// largeImageURL - ссылка на большое изображение.\n// tags - строка с описанием изображения. Подойдет для атрибута alt.\n// likes - количество лайков.\n// views - количество просмотров.\n// comments - количество комментариев.\n// downloads - количество загрузок.\n\n// ==========================================================================================================\n\n// <div class=\"photo-card\">\n//   <img src=\"\" alt=\"\" loading=\"lazy\" />\n//   <div class=\"info\">\n//     <p class=\"info-item\">\n//       <b>Likes</b>\n//     </p>\n//     <p class=\"info-item\">\n//       <b>Views</b>\n//     </p>\n//     <p class=\"info-item\">\n//       <b>Comments</b>\n//     </p>\n//     <p class=\"info-item\">\n//       <b>Downloads</b>\n//     </p>\n//   </div>\n// </div>\n\n// ==========================================================================================================\n\n// После первого запроса при каждом новом поиске выводить уведомление в котором будет написано сколько всего нашли изображений (свойство totalHits).\n// Notify.success(`Hooray! We found ${totalHits} images.`);\n\n\n// Если бэкенд возвращает пустой массив, значит ничего подходящего найдено небыло.\n// Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n\n\n// В ответе бэкенд возвращает свойство totalHits - общее количество изображений которые подошли под критерий поиска (для бесплатного аккаунта). Если пользователь дошел до конца коллекции, пряч кнопку и выводи уведомление\n// Notify.info('We're sorry, but you've reached the end of search results.');\n\n// ==========================================================================================================\n\n// Прокрутка страницы\n// Сделать плавную прокрутку страницы после запроса и отрисовки каждой следующей группы изображений. Вот тебе код подсказка, а разберись в нём самостоятельно.\n\n// const { height: cardHeight } = document\n//   .querySelector('.gallery')\n//   .firstElementChild.getBoundingClientRect();\n\n// window.scrollBy({\n//   top: cardHeight * 2,\n//   behavior: 'smooth',\n// });\n\n// ==========================================================================================================\n\n// Бесконечный скролл\n// Вместо кнопки «Load more» можно сделать бесконечную загрузку изображений при прокрутке страницы. Мы предоставлям тебе полную свободу действий в реализации, можешь использовать любые библиотеки."]}